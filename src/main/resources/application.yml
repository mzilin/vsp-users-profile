# Server properties
server:
  port: 8111

# Information for the info endpoint
info:
  app:
    environment: DEV
    name: ${spring.application.name}
    description: Profile Service - Local Instance

# Spring application properties
spring:
  application:
    name: users-profile
  profiles:
    active: dev
  config:
    import:
      - optional:configserver:discovery://config-server
      - optional:file:./env.properties
  datasource:
    url: ${DB_URL}
    driverClassName: ${DB_DRIVER_CLASS}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database-platform: ${DB_DIALECT}
    hibernate:
      ddl-auto: update
  rabbitmq:
    host: ${RMQ_HOST}
    port: ${RMQ_PORT}
    username: ${RMQ_USERNAME}
    password: ${RMQ_PASSWORD}

# AWS configuration
aws:
  accessKey: ${AWS_ACCESS_KEY}
  secretKey: ${AWS_SECRET_KEY}
  s3:
    region: ${AWS_S3_REGION}
    avatarBucketName: ${AWS_AVATAR_BUCKET_NAME}

# Eureka configuration
eureka:
  client:
    fetchRegistry: ${EUREKA_DISCOVERY_ENABLED}
    registerWithEureka: ${EUREKA_DISCOVERY_ENABLED}
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_DEFAULT_ZONE}
  instance:
    preferIpAddress: true

# RabbitMQ settings
rabbitmq:
  exchange: ${RMQ_EXCHANGE}
  queues:
    profile-setup: ${RMQ_PROFILE_SETUP_Q}
    delete-user-data: ${RMQ_DELETE_USER_DATA_Q}
  routing-keys:
    profile-setup: ${RMQ_PROFILE_SETUP_RK}
    delete-user-data: ${RMQ_DELETE_USER_DATA_RK}

# Management properties
management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, refresh

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.mariuszilinskas.vsp: DEBUG
